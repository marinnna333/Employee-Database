
import java.util.Scanner;

public class EmployeeDatabase{
    
    public static void main(String[] args){
        Employee[] employees = {new Employee("David Beckham", 41, "President", 230000.0), new Employee("Helen Pinterest", 39, "Chief Executive", 235000.0), new Employee("Ada Lovelace", 45, "Vice President", 230000.0), new Employee("Edward Bananahead", 35, "President", 340000.0)};
        
        boolean running = true;
        int choice;
     
        while (running == true){
     
            choice = menuChoice();
     
            switch (choice){
                case 1:
                    printAllEmployees(employees);
                    break;
                case 2:
                    printEmployee(employees);
                    break;
                case 3:
                    increaseEmpSalary(employees);
                    break;
                case 4:
                    printByDesignation(employees);
                    break;
                case 5:
                    yearsLeft(employees);
                    break;
                case 6:
                    printByAge(employees);
                    break;
                case 7:
                    printBySalary(employees);
                    break;
                case 9:
                    running = false;
                    break;
                default:
                    System.out.println("This number is invalid");
            }//End of switch statement
     
        }//End of while loop
     
            quitProgram();
    }

        //Presents the options and gets menu choice from user
        private static int menuChoice(){
            Scanner input = new Scanner(System.in);
     
            System.out.println("Please choose a number and press Enter: \n");
            System.out.println("********************************************************\n");
            System.out.println("[1] Print employee details");
            System.out.println("[2] Print details of one employee");
            System.out.println("[3] Increase an employee's salary by 10%");
            System.out.println("[4] Print by designation");
            System.out.println("[5] Years left before retirement");
            System.out.println("[6] Print by age");
            System.out.println("[7] Print by salary");
            System.out.println("[9] Quit");
            System.out.println("\n********************************************************");
     
            return input.nextInt();
            
        } //End of menuChoice
     
        //Prints out all Employees in emps
        private static void printAllEmployees(Employee[] emps){
            System.out.println("Here is a list of all employees: \n");
            for (int i = 0; i<emps.length; i++){
                System.out.println(emps[i]);
            }
     
            enterToContinue();
     
        }//End of printAll
     
        //Prints out Employee of specific name
        private static void printEmployee(Employee[] emps){
     
            String name;
            boolean found = false;
            Scanner input = new Scanner(System.in);
     
            System.out.println("Enter the name of the employee that you would like to find:");
            name = input.nextLine();
     
            for (int i = 0; i < emps.length; i++){
            //Look for name in emps array
                if ((emps[i].getName()).equals(name)) {
                    System.out.println(emps[i]);
                    found = true;
                }
            }
     
            if (!found){
                System.out.println("The employee could not be found."); //Only if the employee was not found
            }
     
            enterToContinue();
     
        }//End of printEmployee

        //Increases an employeeâ€™s salary by 10 percent
        private static void increaseEmpSalary(Employee[] emps){
            String name;
            double salary;
            double percent;
            double newSalary;
            boolean found = false;
            Scanner input = new Scanner(System.in);
     
            System.out.println("Enter the name of the employee that you would like to increase the salary of:");
            name = input.nextLine();
     
            for (int i = 0; i < emps.length; i++){
            //Look for name in emps array
                if ((emps[i].getName()).equals(name)) {
                    System.out.println(emps[i]);
                    found = true;
                }

            //Calculate new salary
                if (found == true){
                    salary = emps[i].getSalary();
                    percent =  salary / 10;
                    newSalary = salary + percent;
                    System.out.println("The new salary is " + newSalary);
                }    
            
            }    
     
            if (!found){
                System.out.println("The employee could not be found."); //Only if the employee was not found
            }
     
            enterToContinue();
        }//End of increaseEmpSalary

        //Print out Employee of a certain designation
        private static void printByDesignation(Employee[] emps){    
            String designation;
            boolean found = false;
            Scanner input = new Scanner(System.in);
     
            System.out.println("Enter the designation of the employee that you would like to find:");
            designation = input.nextLine();
     
            for (int i = 0; i < emps.length; i++){
            //Look for designation in emps array
                if ((emps[i].getDesignation()).equals(designation)) {
                    System.out.println(emps[i]);
                    found = true;
                }
            }
     
                if (!found){
                    System.out.println("The designation could not be found."); //Only if the designation was not found
                }
     
                enterToContinue();
     
        }//End of printByDesignation
        
        //Prints out years left before retirement
        private static void yearsLeft(Employee[] emps){
            boolean found = false;
            int years;
            int age;
            Scanner input = new Scanner(System.in);
            
            System.out.println("Enter age of employee about which you would like to know the years left before his retirement:");
            age = input.nextInt();
            
            for (int i = 0; i < emps.length; i++){
            //Look for age in emps array
                if (age == emps[i].getAge()){
                    found = true;
                }
                
            //Calculate years left until retirement
                if (found == true){
                    years = 65 - age;
                    System.out.println("The employee has " + years + " years left to work before retirement.");
                }
            }
            
                if (!found){
                    System.out.println("The employee could not be found."); //Only if the employee was not found
                }
         
                enterToContinue();
         
        }//End of yearsLeft
            
        //Prints out Employee of specific age
        private static void printByAge(Employee[] emps){
     
            int age;
            boolean found = false;
            Scanner input = new Scanner(System.in);
     
            System.out.println("Enter the age of the employee(s) that you would like to find:");
            age = input.nextInt();
     
            for (int i = 0; i < emps.length; i++){
            //Look for age in emps array
                if (age == emps[i].getAge()){
                    System.out.println(emps[i]);
                    found = true;
                }
            }
     
            if (!found){
                System.out.println("The age could not be found."); //Only if the employee was not found
            }
     
            enterToContinue();
     
        }//End of printByAge

        //Prints out Employee of specific salary
        private static void printBySalary(Employee[] emps){
            double salary;
            boolean found = false;
            Scanner input = new Scanner(System.in);
     
            System.out.println("Enter the salary of the employee(s) that you would like to find:");
            salary = input.nextDouble();
     
            for (int i = 0; i < emps.length; i++){
            //Look for salary in emps array
                if (salary == emps[i].getSalary()){
                    System.out.println(emps[i]);
                    found = true;
                }
            }
     
            if (!found){
                System.out.println("The salary could not be found."); //Only if the employee was not found
            }
     
            enterToContinue();
     
        }//End of printBSalary

        //Waits for user to press Enter to continue
        private static void enterToContinue(){
            Scanner getEnter = new Scanner(System.in);
            System.out.println("Press enter to continue");
            getEnter.nextLine();
        } //End of enterToContinue
     
        //Quits the program
        private static void quitProgram(){
            System.out.println("Thank you and goodbye!");
        }
    }
